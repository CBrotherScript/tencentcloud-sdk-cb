import ../../common/AbstractModel

class SendSmsRequest extends AbstractModel {
    function SendSmsRequest() {
    }

    /**
    * 下发手机号码，采用 e.164 标准，格式为+[国家或地区码][手机号]，单次请求最多支持200个手机号且要求全为境内手机号或全为境外手机号。
例如：+8613711112222， 其中前面有一个+号 ，86为国家码，13711112222为手机号。
    */
    var mPhoneNumberSet;

    /**
    * 模板 ID，必须填写已审核通过的模板 ID。模板ID可登录 [短信控制台](https://console.cloud.tencent.com/smsv2) 查看，若向境外手机号发送短信，仅支持使用国际/港澳台短信模板。
    */
    
    var mTemplateID;

    /**
    * 短信SdkAppid在 [短信控制台](https://console.cloud.tencent.com/smsv2)  添加应用后生成的实际SdkAppid，示例如1400006666。
    */
    var mSmsSdkAppid;

    /**
    * 短信签名内容，使用 UTF-8 编码，必须填写已审核通过的签名，签名信息可登录 [短信控制台](https://console.cloud.tencent.com/smsv2)  查看。注：国内短信为必填参数。
    */
    var mSign;

    /**
    * 模板参数，若无模板参数，则设置为空。
    */
    var mTemplateParamSet;

    /**
    * 短信码号扩展号，默认未开通，如需开通请联系 [sms helper](https://cloud.tencent.com/document/product/382/3773)。
    */
    var mExtendCode;

    /**
    * 用户的 session 内容，可以携带用户侧 ID 等上下文信息，server 会原样返回。
    */
    var mSessionContext;

    /**
    * 国内短信无senderid，无需填写该项；若需开通国际/港澳台短信senderid。
    */
    var mSenderId;

    /**
     * Get 下发手机号码，采用 e.164 标准，格式为+[国家或地区码][手机号]，单次请求最多支持200个手机号且要求全为境内手机号或全为境外手机号。
例如：+8613711112222， 其中前面有一个+号 ，86为国家码，13711112222为手机号。 
     * @return PhoneNumberSet 下发手机号码，采用 e.164 标准，格式为+[国家或地区码][手机号]，单次请求最多支持200个手机号且要求全为境内手机号或全为境外手机号。
例如：+8613711112222， 其中前面有一个+号 ，86为国家码，13711112222为手机号。
     */
    function getPhoneNumberSet() {
        return mPhoneNumberSet;
    }

    /**
     * Set 下发手机号码，采用 e.164 标准，格式为+[国家或地区码][手机号]，单次请求最多支持200个手机号且要求全为境内手机号或全为境外手机号。
例如：+8613711112222， 其中前面有一个+号 ，86为国家码，13711112222为手机号。
     * @param PhoneNumberSet 下发手机号码，采用 e.164 标准，格式为+[国家或地区码][手机号]，单次请求最多支持200个手机号且要求全为境内手机号或全为境外手机号。
例如：+8613711112222， 其中前面有一个+号 ，86为国家码，13711112222为手机号。
     */
    function setPhoneNumberSet(phoneNumberSet) {
        mPhoneNumberSet = phoneNumberSet;
    }

    /**
     * Get 模板 ID，必须填写已审核通过的模板 ID。模板ID可登录 [短信控制台](https://console.cloud.tencent.com/smsv2) 查看，若向境外手机号发送短信，仅支持使用国际/港澳台短信模板。 
     * @return TemplateID 模板 ID，必须填写已审核通过的模板 ID。模板ID可登录 [短信控制台](https://console.cloud.tencent.com/smsv2) 查看，若向境外手机号发送短信，仅支持使用国际/港澳台短信模板。
     */
    function getTemplateID() {
        return mTemplateID;
    }

    /**
     * Set 模板 ID，必须填写已审核通过的模板 ID。模板ID可登录 [短信控制台](https://console.cloud.tencent.com/smsv2) 查看，若向境外手机号发送短信，仅支持使用国际/港澳台短信模板。
     * @param TemplateID 模板 ID，必须填写已审核通过的模板 ID。模板ID可登录 [短信控制台](https://console.cloud.tencent.com/smsv2) 查看，若向境外手机号发送短信，仅支持使用国际/港澳台短信模板。
     */
    function setTemplateID(templateID) {
        mTemplateID = templateID;
    }

    /**
     * Get 短信SdkAppid在 [短信控制台](https://console.cloud.tencent.com/smsv2)  添加应用后生成的实际SdkAppid，示例如1400006666。 
     * @return SmsSdkAppid 短信SdkAppid在 [短信控制台](https://console.cloud.tencent.com/smsv2)  添加应用后生成的实际SdkAppid，示例如1400006666。
     */
    function getSmsSdkAppid() {
        return mSmsSdkAppid;
    }

    /**
     * Set 短信SdkAppid在 [短信控制台](https://console.cloud.tencent.com/smsv2)  添加应用后生成的实际SdkAppid，示例如1400006666。
     * @param SmsSdkAppid 短信SdkAppid在 [短信控制台](https://console.cloud.tencent.com/smsv2)  添加应用后生成的实际SdkAppid，示例如1400006666。
     */
    function setSmsSdkAppid(smsSdkAppid) {
        mSmsSdkAppid = smsSdkAppid;
    }

    /**
     * Get 短信签名内容，使用 UTF-8 编码，必须填写已审核通过的签名，签名信息可登录 [短信控制台](https://console.cloud.tencent.com/smsv2)  查看。注：国内短信为必填参数。 
     * @return Sign 短信签名内容，使用 UTF-8 编码，必须填写已审核通过的签名，签名信息可登录 [短信控制台](https://console.cloud.tencent.com/smsv2)  查看。注：国内短信为必填参数。
     */
    function getSign() {
        return mSign;
    }

    /**
     * Set 短信签名内容，使用 UTF-8 编码，必须填写已审核通过的签名，签名信息可登录 [短信控制台](https://console.cloud.tencent.com/smsv2)  查看。注：国内短信为必填参数。
     * @param Sign 短信签名内容，使用 UTF-8 编码，必须填写已审核通过的签名，签名信息可登录 [短信控制台](https://console.cloud.tencent.com/smsv2)  查看。注：国内短信为必填参数。
     */
    function setSign(sign) {
        mSign = sign;
    }

    /**
     * Get 模板参数，若无模板参数，则设置为空。 
     * @return TemplateParamSet 模板参数，若无模板参数，则设置为空。
     */
    function getTemplateParamSet() {
        return mTemplateParamSet;
    }

    /**
     * Set 模板参数，若无模板参数，则设置为空。
     * @param TemplateParamSet 模板参数，若无模板参数，则设置为空。
     */
    function setTemplateParamSet(templateParamSet) {
        mTemplateParamSet = templateParamSet;
    }

    /**
     * Get 短信码号扩展号，默认未开通
     * @return ExtendCode 短信码号扩展号，默认未开通
     */
    function getExtendCode() {
        return this.ExtendCode;
    }

    /**
     * Set 短信码号扩展号，默认未开通，
     * @param ExtendCode 短信码号扩展号，默认未开通
     */
    function setExtendCode(extendCode) {
        mExtendCode = extendCode;
    }

    /**
     * Get 用户的 session 内容，可以携带用户侧 ID 等上下文信息，server 会原样返回。 
     * @return SessionContext 用户的 session 内容，可以携带用户侧 ID 等上下文信息，server 会原样返回。
     */
    function getSessionContext() {
        return mSessionContext;
    }

    /**
     * Set 用户的 session 内容，可以携带用户侧 ID 等上下文信息，server 会原样返回。
     * @param SessionContext 用户的 session 内容，可以携带用户侧 ID 等上下文信息，server 会原样返回。
     */
    function setSessionContext(sessionContext) {
        mSessionContext = sessionContext;
    }

    /**
     * Get 国内短信无senderid，无需填写该项；若需开通国际/港澳台短信senderid。 
     * @return SenderId 国内短信无senderid，无需填写该项；若需开通国际/港澳台短信senderid。
     */
    function getSenderId() {
        return mSenderId;
    }

    /**
     * Set 国内短信无senderid，无需填写该项；若需开通国际/港澳台短信senderid。
     * @param SenderId 国内短信无senderid，无需填写该项；若需开通国际/港澳台短信senderid。
     */
    function setSenderId(senderId) {
        mSenderId = senderId;
    }


    function toMap(map, prefix) {
        setParamArrayToMap(map, prefix + "PhoneNumberSet.", mPhoneNumberSet);
        setParamToMap(map, prefix + "TemplateID", mTemplateID);
        setParamToMap(map, prefix + "SmsSdkAppid", mSmsSdkAppid);
        setParamToMap(map, prefix + "Sign", mSign);
        setParamArrayToMap(map, prefix + "TemplateParamSet.", mTemplateParamSet);
        setParamToMap(map, prefix + "ExtendCode", mExtendCode);
        setParamToMap(map, prefix + "SessionContext", mSessionContext);
        setParamToMap(map, prefix + "SenderId", mSenderId);
    }
}